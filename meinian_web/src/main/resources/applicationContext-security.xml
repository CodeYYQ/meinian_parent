<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:securrity="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!--
      http：用于定义相关权限控制
      指定哪些资源不需要进行权限校验，可以使用通配符
    -->
    <security:http security="none" pattern="/js/**" />
    <security:http security="none" pattern="/css/**" />
    <security:http security="none" pattern="/img/**" />
    <security:http security="none" pattern="/plugins/**" />
    <security:http security="none" pattern="/login.html" />

    <security:http auto-config="true" use-expressions="true">
        <!-- 设置需要拦截的资源路径，并设置访问规则 必须认证 -->
        <security:intercept-url access="isAuthenticated()" pattern="/pages/**"/>
        <!-- 设置自定义的登录页面 -->
        <security:form-login login-page="/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             login-processing-url="/login.do"
                             default-target-url="/pages/main.html"
                             authentication-failure-url="/login.html"
                             always-use-default-target="true"/>
        <!-- 禁用csrf -->
        <security:csrf disabled="true" />
        <!-- 设置退出登录功能 -->
        <security:logout logout-url="/logout.do" logout-success-url="/login.html" invalidate-session="true"/>
        <security:headers>
            <!--设置在页面可以通过iframe访问受保护的页面，默认为不允许访问-->
            <security:frame-options policy="SAMEORIGIN"></security:frame-options>
        </security:headers>
        <!--自定义异常处理-->
        <security:access-denied-handler ref="customAccessDeniedHandler"/>
    </security:http>

    <!-- 设置开启注解的方式管理权限 -->
    <security:global-method-security pre-post-annotations="enabled"/>

    <!-- 配置bcrypt密码加密程序 -->
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <!-- 配置认证管理 -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="springSecurityUserService" >
            <security:password-encoder ref="bCryptPasswordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
</beans>